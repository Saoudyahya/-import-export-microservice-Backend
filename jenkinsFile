pipeline {
    agent any

    environment {
        COMPOSE_FILE = 'docker-compose.yml'
        DOCKERHUB_CREDENTIALS = credentials('iyminds-dockerhub')
        DOCKERHUB_REPO = 'iyminds/import-export-microservice'
        IMAGE_TAG = 'latest'
        GIT_CREDENTIALS_ID = 'githubCredentials' // The ID of the stored credentials in Jenkins
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    checkout([
                        $class: 'GitSCM',
                        branches: [[name: '*/main']],
                        doGenerateSubmoduleConfigurations: false,
                        extensions: [],
                        submoduleCfg: [],
                        userRemoteConfigs: [[
                            url: 'https://github.com/Saoudyahya/-import-export-microservice-Backend',
                            credentialsId: env.GIT_CREDENTIALS_ID
                        ]]
                    ])
                }
            }
        }

     stage('Build Spring Boot App') {
         steps {
             sh 'ls -al'
             withMaven(maven: 'maven-3.5.2') {
                 sh './mvnw clean package -DskipTests'
             }
         }
     }


        stage('Build Docker Images') {
            steps {
                // Build Docker images using Docker Compose
                sh 'docker-compose build'
            }
        }

        stage('Run Containers') {
            steps {
                // Run Docker containers using Docker Compose
                sh 'docker-compose up -d'
            }
        }

        stage('Integration Tests') {
            steps {
                // Run integration tests, if any
                sh './mvnw verify'
            }
        }

        stage('Push to Docker Hub') {
            steps {
                script {
                    // Verify that Docker Hub credentials are retrieved
                    withCredentials([usernamePassword(credentialsId: env.DOCKERHUB_CREDENTIALS, usernameVariable: 'DOCKERHUB_USERNAME', passwordVariable: 'DOCKERHUB_PASSWORD')]) {
                        echo "Retrieved Docker Hub credentials successfully."
                        // Log in to Docker Hub
                        sh 'echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin'
                        
                        // Tag the built image
                        sh "docker tag spring-boot-app:latest ${env.DOCKERHUB_REPO}:${env.IMAGE_TAG}"
                        
                        // Push the image to Docker Hub
                        sh "docker push ${env.DOCKERHUB_REPO}:${env.IMAGE_TAG}"
                    }
                }
            }
        }
    }

    post {
        always {
            // Clean up Docker containers
            sh 'docker-compose down'
        }
        success {
            echo 'Deployment was successful!'
        }
        failure {
            echo 'Deployment failed!'
        }
    }
}
